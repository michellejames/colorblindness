.hero__imgNORMAL{background-image:url(../../assets/img/HomePage/HeroGlasses.png);-webkit-filter:blur(3px);filter:blur(3px)}.due .hero__imgNORMAL{background-image:url(../../assets/img/HomePage/HeroGlassesDUE.png)}.pro .hero__imgNORMAL{background-image:url(../../assets/img/HomePage/HeroGlassesPRO.png)}.tri .hero__imgNORMAL{background-image:url(../../assets/img/HomePage/HeroGlassesTRI.png)}.heroText{color:#ffc952}.due .heroText{color:#d9d75a}.pro .heroText{color:#cfce5c}.tri .heroText{color:#feb9c4}.text__1,.text__3{font-size:1.3em}@media screen and (min-width:600px){.text__1,.text__3{font-size:2em}}@media screen and (min-width:900px){.text__1,.text__3{font-size:3em}}.text__1{top:-5%}.text__1,.text__3{position:absolute;transform:translate(-50%,-50%);left:50%}.text__3{top:80%}.text__2{font-size:8em;letter-spacing:.4em;margin-right:-.4em}@media screen and (min-width:600px){.text__2{font-size:12em}}@media screen and (min-width:900px){.text__2{font-size:19em}}@media screen and (min-width:1200px){.text__2{font-size:23em}}.slider__dot.slider__dot:hover{background:#ffc952}.due .slider__dot.slider__dot:hover{background:#d9d75a}.pro .slider__dot.slider__dot:hover{background:#cfce5c}.tri .slider__dot.slider__dot:hover{background:#feb9c4}.fourPointFive{margin-top:5%;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;text-align:center;font-family:Bitter,serif;color:#47b8e0}.due .fourPointFive{color:#9e9fdf}.pro .fourPointFive{color:#aeafdd}.tri .fourPointFive{color:#feb9c4}.fourPointFive__text{margin:0;font-size:1.1em;max-width:60%}@media screen and (min-width:600px){.fourPointFive__text{font-size:1.7em}}@media screen and (min-width:900px){.fourPointFive__text{font-size:2.5em}}.fourPointFive__text_large{margin:0;font-size:5em;margin-bottom:-3%;text-transform:uppercase;letter-spacing:.1em;font-family:BebasNeue;color:#ffc952}.due .fourPointFive__text_large{color:#d9d75a}.pro .fourPointFive__text_large{color:#cfce5c}.tri .fourPointFive__text_large{color:#feb9c4}@media screen and (min-width:600px){.fourPointFive__text_large{font-size:8em}}@media screen and (min-width:900px){.fourPointFive__text_large{font-size:12em}}@media screen and (min-width:1200px){.fourPointFive__text_large{font-size:16em}}.drawnEye{-ms-flex-pack:justify;justify-content:space-between;margin:15% 5%}.colorPalette,.drawnEye{display:-ms-flexbox;display:flex}.colorPalette{-ms-flex-direction:column;flex-direction:column;margin-top:5%}@media screen and (min-width:600px){.colorPalette{display:-ms-flexbox;display:flex;-ms-flex-direction:row-reverse;flex-direction:row-reverse;-ms-flex-pack:justify;justify-content:space-between;margin:5%;margin-bottom:15%;margin-top:15%}}.rain{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden}@media screen and (min-width:600px){.rain{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;margin:5%;margin-bottom:10%}}.drawnEyePictureFrame{position:absolute;width:35.9375%;height:0;padding-bottom:70%;left:17.1875%;margin-top:-3%;border:4px solid #ff6868}.due .drawnEyePictureFrame{border:4px solid #a09f66}.pro .drawnEyePictureFrame{border:4px solid #80806a}.tri .drawnEyePictureFrame{border:4px solid #fd6483}@media screen and (min-width:600px){.drawnEyePictureFrame{width:39.9375%}}.colorPaletteFrame{position:absolute;width:37%;height:0;padding-bottom:82%;left:22.1875%;margin-top:-3%;border:4px solid #ff6868}.due .colorPaletteFrame{border:4px solid #a09f66}.pro .colorPaletteFrame{border:4px solid #80806a}.tri .colorPaletteFrame{border:4px solid #fd6483}@media screen and (min-width:600px){.colorPaletteFrame{padding-bottom:70%;left:49.1875%;width:30%}}.rainFrame{position:absolute;width:33%;height:0;padding-bottom:82%;left:2.1875%;margin-top:-3%;margin-left:19%;border:4px solid #ff6868}.due .rainFrame{border:4px solid #a09f66}.pro .rainFrame{border:4px solid #80806a}.tri .rainFrame{border:4px solid #fd6483}@media screen and (min-width:600px){.rainFrame{width:30%;left:-12%;padding-bottom:63%}}.drawnEyePicture{background-image:url(../../assets/img/HomePage/DrawnEyePicture.png)}.colorPalettePicture,.drawnEyePicture{z-index:2;background-repeat:no-repeat;background-size:contain;width:100%;height:0;padding-bottom:72.72727273%}.colorPalettePicture{background-position:50%;background-image:url(../../assets/img/HomePage/ColorPalette.png)}.due .colorPalettePicture{background-image:url(../../assets/img/HomePage/ColorPaletteDUE.png)}.pro .colorPalettePicture{background-image:url(../../assets/img/HomePage/ColorPalettePRO.png)}.tri .colorPalettePicture{background-image:url(../../assets/img/HomePage/ColorPaletteTRI.png)}@media screen and (min-width:600px){background-position:none}.rainPicture{z-index:2;margin-left:25%;background-repeat:no-repeat;background-size:contain;width:100%;height:0;padding-bottom:72.72727273%;background-image:url(../../assets/img/HomePage/RainReflect.png)}.due .rainPicture{background-image:url(../../assets/img/HomePage/RainReflectDUE.png)}.pro .rainPicture{background-image:url(../../assets/img/HomePage/RainReflectPRO.png)}.tri .rainPicture{background-image:url(../../assets/img/HomePage/RainReflectTRI.png)}@media screen and (min-width:600px){.rainPicture{margin-left:5%}}.drawnEyeParagraph{font-family:Bitter,serif;text-align:center;margin-top:20%;font-size:1rem;line-height:1.4em;color:#47b8e0}.due .drawnEyeParagraph{color:#9e9fdf}.pro .drawnEyeParagraph{color:#aeafdd}.tri .drawnEyeParagraph{color:#feb9c4}@media screen and (min-width:600px){.drawnEyeParagraph{font-size:1.3rem}}@media screen and (min-width:900px){.drawnEyeParagraph{font-size:2rem}}.colorPaletteText{width:100%;margin-right:5%;color:#6b6b6b;margin-top:15%}@media screen and (min-width:600px){.colorPaletteText{margin-top:0}}.rainText{width:100%;color:#6b6b6b;margin-top:15%}@media screen and (min-width:600px){.rainText{margin-left:5%;margin-top:0}}.details__list{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;font-size:1.3em;font-family:Bitter,serif;font-style:italic;font-weight:100;line-height:2em}@media screen and (min-width:600px){.details__list{font-size:1em}}@media screen and (min-width:900px){.details__list{font-size:1.2em}}@media screen and (min-width:1200px){.details__list{font-size:1.5em}}.details__list1{margin-right:40%}@media screen and (min-width:600px){.details__list1{margin-right:0}}.details__list2{margin-right:15%}@media screen and (min-width:600px){.details__list2{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;margin-right:0;margin-top:5%}}.details__paragraph,.details__paragraph2{margin:5%;line-height:1.4em;font-family:Bitter,serif}@media screen and (min-width:600px){.details__paragraph,.details__paragraph2{font-size:1.2em;margin-top:15%}}@media screen and (min-width:900px){.details__paragraph,.details__paragraph2{font-size:1.5em;margin-top:20%}}@media screen and (min-width:1200px){.details__paragraph,.details__paragraph2{font-size:1.8em;margin-top:25%}}.details__paragraph2,.detailsFormParagraph{margin:15% 5%}.types{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;text-align:center;line-height:.8em;font-family:Bitter,serif;color:#6b6b6b}@media screen and (min-width:600px){.types{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:center;justify-content:center;margin-bottom:5%}}.types__one,.types__three,.types__two{width:100%;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;margin-bottom:8%}@media screen and (min-width:600px){.types__one,.types__three,.types__two{margin-bottom:0}}.types__eyeOne{background-image:url(../../assets/img/HomePage/normal.png);background-repeat:no-repeat;background-size:contain;width:60%;height:150px;margin-left:10%}@media screen and (min-width:600px){.types__eyeOne{height:100px;width:80%}}@media screen and (min-width:900px){.types__eyeOne{height:170px;width:80%}}.types__eyeTwo{background-image:url(../../assets/img/HomePage/TRI.png);background-repeat:no-repeat;background-size:contain;width:55%;height:150px}@media screen and (min-width:600px){.types__eyeTwo{height:100px;width:80%}}@media screen and (min-width:900px){.types__eyeTwo{height:170px;width:80%}}.types__eyeThree{background-image:url(../../assets/img/HomePage/DEU-TRI.png);background-repeat:no-repeat;background-size:contain;width:60%;height:150px;margin-left:10%}@media screen and (min-width:600px){.types__eyeThree{height:110px;width:80%}}@media screen and (min-width:900px){.types__eyeThree{height:170px;width:80%}}.details__list-item,.details__list-item2{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:end;justify-content:flex-end;-ms-flex-align:center;align-items:center}.details__list-item2 p,.details__list-item p{margin:0;text-align:right;padding-right:2%;color:#6b6b6b}.details__circle{width:15px;height:15px;border-radius:20px;margin:5px;transition:.3s;background:#6b6b6b}.details__circle.details__circle:hover{background:#ffc952}.due .details__circle.details__circle:hover{background:#d9d75a}.pro .details__circle.details__circle:hover{background:#cfce5c}.tri .details__circle.details__circle:hover{background:#feb9c4}.details__circle.active{background:#ffc952}.due .details__circle.active{background:#d9d75a}.pro .details__circle.active{background:#cfce5c}.tri .details__circle.active{background:#feb9c4}.details__blue-highlight{color:#47b8e0}.due .details__blue-highlight{color:#9e9fdf}.pro .details__blue-highlight{color:#aeafdd}.tri .details__blue-highlight{color:#feb9c4}.isolate{margin:5%;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;font-family:Bitter,serif;color:#47b8e0}.due .isolate{color:#9e9fdf}.pro .isolate{color:#aeafdd}.tri .isolate{color:#feb9c4}.isolate__text{margin:0;font-size:.9375em}@media screen and (min-width:600px){.isolate__text{font-size:1.7em}}@media screen and (min-width:900px){.isolate__text{font-size:2.5em}}.isolate__text_one{position:absolute}@media screen and (min-width:1200px){.isolate__text_one{margin-top:1%}}.isolate__text_two{margin:0;font-size:7em;text-transform:uppercase;letter-spacing:.1em;margin-right:-.1em;text-align:center;font-family:BebasNeue;color:#ffc952}.due .isolate__text_two{color:#d9d75a}.pro .isolate__text_two{color:#cfce5c}.tri .isolate__text_two{color:#feb9c4}@media screen and (min-width:600px){.isolate__text_two{font-size:11em}}@media screen and (min-width:900px){.isolate__text_two{font-size:17em}}@media screen and (min-width:1200px){.isolate__text_two{font-size:22em}}.isolate__text-three{position:absolute;margin-top:25%;margin-left:62%}@media screen and (min-width:500px){.isolate__text-three{margin-top:21%}}@media screen and (min-width:600px){.isolate__text-three{margin-top:27%;margin-left:58%}}@media screen and (min-width:700px){.isolate__text-three{margin-top:23%;margin-left:56%}}@media screen and (min-width:800px){.isolate__text-three{margin-top:20%;margin-left:55%}}@media screen and (min-width:900px){.isolate__text-three{margin-top:28%;margin-left:60%}}.isolate__lines{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.blue__line{width:2px;height:100px;background:#47b8e0}.due .blue__line{background:#9e9fdf}.pro .blue__line{background:#aeafdd}.tri .blue__line{background:#feb9c4}@media screen and (min-width:600px){.blue__line{height:153px}}@media screen and (min-width:900px){.blue__line{height:239px;width:3px;height:306px}}.blue__line1{margin-top:6%}.blue__line2{margin-top:1%}.footer{width:100%;height:40%}@media screen and (min-width:600px){.footer{height:60%}}@media screen and (min-width:900px){.footer{height:80%}}.footerText{width:100%;height:100%;position:relative;top:-10%;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.footerImage{background-repeat:no-repeat;background-size:cover;width:100%;height:100%;opacity:.7;background-image:url(../../assets/img/Footer/FooterImage.png)}.due .footerImage{background-image:url(../../assets/img/Footer/FooterImageDUE.png)}.pro .footerImage{background-image:url(../../assets/img/Footer/FooterImagePRO.png)}.tri .footerImage{background-image:url(../../assets/img/Footer/FooterImageTRI.png)}@media screen and (min-width:900px){.design .tile__button-blue,.index .tile__button-blue{font-size:2rem;padding:1% 3%}}.footerParagraph{position:relative;top:30%;left:50%;transform:translate(-50%,-50%);text-align:center;color:#fff;margin-right:10%;margin-left:0;font-size:1.3em;padding:10% 0;font-family:Bitter,serif;font-style:italic}@media screen and (min-width:600px){.footerParagraph{top:33%;font-size:2em}}@media screen and (min-width:900px){.footerParagraph{top:35%;font-size:2.5em}}.footerButton{position:relative;left:50%;transform:translate(-50%,-50%);color:#fff;text-transform:uppercase;box-shadow:10px 10px 5px 0 rgba(0,0,0,.75);width:20%;font-family:BebasNeue;font-size:1.2em;letter-spacing:.1em;margin-right:.1em;background:#47b8e0}.due .footerButton{background:#9e9fdf}.pro .footerButton{background:#aeafdd}.tri .footerButton{background:#feb9c4}@media screen and (min-width:600px){.footerButton{width:17%;font-size:1.5em}}@media screen and (min-width:900px){.footerButton{width:15%;font-size:2em}}.facebook{position:absolute;background-repeat:no-repeat;width:100%;height:50px;left:5%;background-image:url(../../assets/img/HomePage/facebookicon.png)}@media screen and (min-width:600px){.facebook{left:0;width:10%}}.twitter{position:absolute;left:23%;background-repeat:no-repeat;width:100%;height:50px;background-image:url(../../assets/img/HomePage/twittericon.png)}@media screen and (min-width:600px){.twitter{left:20%;width:10%}}.footernav{-ms-flex-pack:end;justify-content:flex-end;padding-left:5%;padding:15px 0}.footernav a{margin:0 3%;margin-right:5%}@media screen and (min-width:600px){.footernav a{margin:0 5%}}@media screen and (min-width:600px){.footernav{font-size:1rem;padding:0;padding-left:5%}}.heroTextHeadlineDesign{font-size:6em}.design .heroTextHeadlineCoral{font-size:5.5rem;margin-top:50%}@media screen and (min-width:600px){.design .heroTextHeadlineCoral{font-size:8.5rem;margin-top:58%}}@media screen and (min-width:900px){.design .heroTextHeadlineCoral{font-size:13rem;margin-top:65%}}@media screen and (min-width:1200px){.design .heroTextHeadlineCoral{font-size:17rem;margin-top:50%}}.details__coral-highlight{color:#ff7473}.due .details__coral-highlight{color:#a6a571}.pro .details__coral-highlight{color:#898975}.tri .details__coral-highlight{color:#fd728b}.blueEmptyRectangle1{position:absolute;width:70%;height:0;padding-bottom:18%;border:2px solid #47b8e0;border-bottom:1px solid transparent;border-left:1px solid transparent;left:5%}.due .blueEmptyRectangle1{border:2px solid #9e9fdf;border-bottom:1px solid transparent;border-left:1px solid transparent}.pro .blueEmptyRectangle1{border:2px solid #aeafdd;border-bottom:1px solid transparent;border-left:1px solid transparent}.tri .blueEmptyRectangle1{border:2px solid #feb9c4;border-bottom:1px solid transparent;border-left:1px solid transparent}@media screen and (min-width:600px){.blueEmptyRectangle1{width:65%;padding-bottom:8%;padding-bottom:12%}}.blueEmptyRectangle2{position:absolute;width:30%;height:0;padding-bottom:18%;border:2px solid #47b8e0;border-top:1px solid transparent;border-left:1px solid transparent;left:71%;top:157%}.due .blueEmptyRectangle2{border:2px solid #9e9fdf;border-top:1px solid transparent;border-left:1px solid transparent}.pro .blueEmptyRectangle2{border:2px solid #aeafdd;border-top:1px solid transparent;border-left:1px solid transparent}.tri .blueEmptyRectangle2{border:2px solid #feb9c4;border-top:1px solid transparent;border-left:1px solid transparent}@media screen and (min-width:600px){.blueEmptyRectangle2{width:20%;left:74%;top:131%}}@media screen and (min-width:900px){.blueEmptyRectangle2{top:202%}}.blueLine1{width:20%;margin-left:75%;margin-top:18.1%}@media screen and (min-width:600px){.blueLine1{width:25%;margin-left:70%;margin-top:12.1%}}.mainContent{width:100%}.firstDesignParagraph{font-size:1.4em;color:#6b6b6b}@media screen and (min-width:600px){.firstDesignParagraph{margin-top:5%}}@media screen and (min-width:900px){.firstDesignParagraph{font-size:1.8em;text-align:left;width:60%}}.rectanglesParent{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;margin:15% 5% 5%}@media screen and (min-width:600px){.rectanglesParent{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row}}.rectanglesText{margin-top:10%}@media screen and (min-width:600px){.rectanglesText{display:-ms-flexbox;display:flex;-ms-flex-direction:column-reverse;flex-direction:column-reverse;margin-top:-5%;margin-left:5%}}@media screen and (min-width:900px){.rectanglesText{margin-top:-10%}}.details__list3{z-index:2}@media screen and (min-width:600px){.details__list3{margin-right:15%}}.rectangle__pass{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin-bottom:10%}.rectangle__pass_rectangle1{width:225px;height:75px;background:#ffc952}.due .rectangle__pass_rectangle1{background:#d9d75a}.pro .rectangle__pass_rectangle1{background:#cfce5c}.tri .rectangle__pass_rectangle1{background:#feb9c4}@media screen and (min-width:900px){.rectangle__pass_rectangle1{width:400px;height:100px}}.rectangle__pass_rectangle2{width:225px;height:75px;background:#47b8e0}.due .rectangle__pass_rectangle2{background:#9e9fdf}.pro .rectangle__pass_rectangle2{background:#aeafdd}.tri .rectangle__pass_rectangle2{background:#feb9c4}@media screen and (min-width:900px){.rectangle__pass_rectangle2{width:400px;height:100px}}.fail,.pass{margin-left:5%;font-size:1.3em;color:#6b6b6b;font-family:Bitter,serif}.rectangle__fail{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.rectangle__fail_rectangle1{width:225px;height:75px;background:#cc9293}.due .rectangle__fail_rectangle1{background:#a4a492}.pro .rectangle__fail_rectangle1{background:#a39893}.tri .rectangle__fail_rectangle1{background:#cb909a}@media screen and (min-width:900px){.rectangle__fail_rectangle1{width:400px;height:100px}}.rectangle__fail_rectangle2{width:225px;height:75px;background:#c89e58}.due .rectangle__fail_rectangle2{background:#aaa95c}.pro .rectangle__fail_rectangle2{background:#a3a25c}.tri .rectangle__fail_rectangle2{background:#cb939c}@media screen and (min-width:900px){.rectangle__fail_rectangle2{width:400px;height:100px}}.rectangleDesignParagraph{text-align:center;font-size:1.4em;color:#6b6b6b;margin:15% 0}@media screen and (min-width:900px){.rectangleDesignParagraph{font-size:1.8em}}.blueLine{position:absolute;border:1px solid #47b8e0}.due .blueLine{border:1px solid #9e9fdf}.pro .blueLine{border:1px solid #aeafdd}.tri .blueLine{border:1px solid #feb9c4}.contrastDesignParagraph{text-align:center;font-size:1.4em;color:#6b6b6b;margin-bottom:15%}@media screen and (min-width:600px){.contrastDesignParagraph{text-align:end;margin-top:15%;font-size:1.2em;margin-bottom:0}}@media screen and (min-width:900px){.contrastDesignParagraph{font-size:1.8em}}.blurryImages{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}@media screen and (min-width:600px){.blurryImages{-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:center;justify-content:center;margin:-1% 5% 0}}.bluredImage,.unbluredImage{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}@media screen and (min-width:600px){.bluredImage,.unbluredImage{width:50%}}.unbluredPictureFrame{position:absolute;width:52%;height:0;padding-bottom:82%;left:2.1875%;margin-top:-3%;border:4px solid #ff6868}.due .unbluredPictureFrame{border:4px solid #a09f66}.pro .unbluredPictureFrame{border:4px solid #80806a}.tri .unbluredPictureFrame{border:4px solid #fd6483}@media screen and (min-width:600px){.unbluredPictureFrame{width:26%;left:5.1875%;padding-bottom:42%}}.unbluredPicture{position:relative;margin-bottom:20%;background-size:contain;margin-left:7%;z-index:2;background-repeat:no-repeat;background-position:50%;width:90%;height:0;padding-bottom:72.72727273%;background-image:url(../../assets/img/DesignPage/textoverimageNORMAL.png)}.due .unbluredPicture{background-image:url(../../assets/img/DesignPage/textoverimageDUE.png)}.pro .unbluredPicture{background-image:url(../../assets/img/DesignPage/textoverimagePRO.png)}.tri .unbluredPicture{background-image:url(../../assets/img/DesignPage/textoverimageTRI.png)}.bluredPictureText,.unbluredPictureText{position:absolute;top:65%;left:50%;transform:translate(-50%,-50%);color:#fff;font-size:1.4rem;font-family:Bitter,serif}.bluredPictureFrame{position:absolute;width:82%;height:0;padding-bottom:55%;border:4px solid #ff6868;left:14.1875%;margin-top:15%}.due .bluredPictureFrame{border:4px solid #a09f66}.pro .bluredPictureFrame{border:4px solid #80806a}.tri .bluredPictureFrame{border:4px solid #fd6483}@media screen and (min-width:600px){.bluredPictureFrame{width:38%;padding-bottom:25%;left:56.1875%;margin-top:9%}}.bluredPicture{position:relative;margin-bottom:20%;background-size:contain;margin-left:3%;z-index:2;background-repeat:no-repeat;background-position:50%;width:90%;height:0;padding-bottom:72.72727273%;background-image:url(../../assets/img/DesignPage/textoverimageNORMAL.png);-webkit-filter:blur(2px);filter:blur(2px)}.due .bluredPicture{background-image:url(../../assets/img/DesignPage/textoverimageDUE.png)}.pro .bluredPicture{background-image:url(../../assets/img/DesignPage/textoverimagePRO.png)}.tri .bluredPicture{background-image:url(../../assets/img/DesignPage/textoverimageTRI.png)}.details__list4{margin-right:50%;margin-top:-10%}@media screen and (min-width:600px){.details__list4{margin-right:5%;margin-top:0}}.formfieldDesignParagraph{text-align:center;font-size:1.4em;color:#6b6b6b;margin:15% 5%}@media screen and (min-width:600px){.formfieldDesignParagraph{font-size:1.6em;text-align:left;width:60%;margin:5% 5% 3%}}@media screen and (min-width:900px){.formfieldDesignParagraph{font-size:1.8em;text-align:left;width:60%}}.yellowEmptyRectangle1{position:absolute;width:92%;height:0;padding-bottom:11%;border:2px solid #ffc952;border-bottom:1px solid transparent;border-left:1px solid transparent}.due .yellowEmptyRectangle1{border:2px solid #d9d75a;border-bottom:1px solid transparent;border-left:1px solid transparent}.pro .yellowEmptyRectangle1{border:2px solid #cfce5c;border-bottom:1px solid transparent;border-left:1px solid transparent}.tri .yellowEmptyRectangle1{border:2px solid #feb9c4;border-bottom:1px solid transparent;border-left:1px solid transparent}@media screen and (min-width:600px){.yellowEmptyRectangle1{left:5%;width:80%;padding-bottom:28%}}.redLine1{position:absolute;width:2px;height:0;padding-bottom:86%;margin-left:3%;background:#ff6868}.due .redLine1{background:#a09f66}.pro .redLine1{background:#80806a}.tri .redLine1{background:#fd6483}@media screen and (min-width:600px){.redLine1{margin-left:7%}}.redLine2{position:absolute;width:2px;height:0;padding-bottom:26%;margin-left:97%;background:#ff6868}.due .redLine2{background:#a09f66}.pro .redLine2{background:#80806a}.tri .redLine2{background:#fd6483}@media screen and (min-width:600px){.redLine2{margin-left:93%;padding-bottom:46%}}.forms{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;margin:25% 5% 5%}@media screen and (min-width:600px){.forms{width:60%;margin:10% 5% -32%}}.form1,.form2{display:-ms-flexbox;display:flex;width:100%;margin-bottom:5%}@media screen and (min-width:600px){.form2{margin-left:49%}}.facebookForm1,.facebookForm2{width:100%}.facebookForm1__image{background-image:url(../../assets/img/DesignPage/Assets/TextField1.png)}.facebookForm1__image,.facebookForm2__image{background-size:contain;background-repeat:no-repeat;background-position:50%;width:100%;height:0;padding-bottom:72.72727273%}.facebookForm2__image{background-image:url(../../assets/img/DesignPage/Assets/TextField2.png)}.details__list5{z-index:2;margin-top:6%}@media screen and (min-width:600px){.details__list5{margin-left:10%}}@media screen and (min-width:900px){.details__list5{margin-top:12%}}.formArrowLong{background-size:contain;background-repeat:no-repeat;background-position:50%;width:47.9375%;height:0;padding-bottom:20.727273%;margin-right:5%;background-image:url(../../assets/img/DesignPage/Assets/Textwarning1.png)}.due .formArrowLong{background-image:url(../../assets/img/DesignPage/textwarningnewcolor2DEU.png)}.pro .formArrowLong{background-image:url(../../assets/img/DesignPage/textwarningnewcolor2PRO.png)}.tri .formArrowLong{background-image:url(../../assets/img/DesignPage/textwarningnewcolor2TRI.png)}.formArrowShort{background-size:contain;background-repeat:no-repeat;background-position:50%;width:28%;height:0;padding-bottom:47.727273%;position:absolute;left:65%;margin-left:2%;background-image:url(../../assets/img/DesignPage/Assets/Textwarning2.png)}.due .formArrowShort{background-image:url(../../assets/img/DesignPage/textwarningnewcolorDEU.png)}.pro .formArrowShort{background-image:url(../../assets/img/DesignPage/textwarningnewcolorPRO.png)}.tri .formArrowShort{background-image:url(../../assets/img/DesignPage/textwarningnewcolorTRI.png)}@media screen and (min-width:600px){.formArrowShort{width:18%;padding-bottom:31.727273%;left:69%;margin-left:8%}}.funfactDesignParagraph,.outlineDesignParagraph{text-align:center;font-size:1.4em;color:#6b6b6b;margin:15% 5%}@media screen and (min-width:600px){.funfactDesignParagraph,.outlineDesignParagraph{font-size:1.8em;text-align:left;width:60%}}.outlineDesignParagraph{margin-bottom:15%}@media screen and (min-width:600px){.outlineDesignParagraph{width:47%}}@media screen and (min-width:900px){.outlineDesignParagraph{margin-top:13%}}.funfactDesignParagraph{margin:5% 5% 10%}@media screen and (min-width:600px){.funfactDesignParagraph{margin-bottom:5%;width:80%}}.facebookSignUp{width:90%;margin:5%}@media screen and (min-width:600px){.facebookSignUp{margin-top:0}}.facebookSignUp__image{background-size:cover;z-index:2;background-repeat:no-repeat;background-position:50%;width:100%;height:0;padding-bottom:53%;background-image:url(../../assets/img/DesignPage/FacebookLoginScreen.png)}.due .facebookSignUp__image{background-image:url(../../assets/img/DesignPage/FacebookLoginScreenDUE.png)}.pro .facebookSignUp__image{background-image:url(../../assets/img/DesignPage/FacebookLoginScreenPRO.png)}.tri .facebookSignUp__image{background-image:url(../../assets/img/DesignPage/FacebookLoginScreenTRI.png)}@media screen and (min-width:600px){.facebookSignUp__image{width:90%;margin-left:5%;background-size:contain}}.facebookLogo{display:-ms-flexbox;display:flex;margin:5%}.facebookLogo__image{background-size:cover;z-index:2;background-repeat:no-repeat;background-position:50%;width:100%;height:0;padding-bottom:20%;margin-right:5%;background-image:url(../../assets/img/DesignPage/Facebookblue.png)}.due .facebookLogo__image{background-image:url(../../assets/img/DesignPage/FacebookblueDUE.png)}.pro .facebookLogo__image{background-image:url(../../assets/img/DesignPage/FacebookbluePRO.png)}.tri .facebookLogo__image{background-image:url(../../assets/img/DesignPage/FacebookblueTRI.png)}@media screen and (min-width:600px){.facebookLogo__image{width:90%;margin-left:5%;background-size:contain}}.preFooter{margin:5%;width:90%;position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.preFooter .finalDesignParagraph{text-align:center;font-size:1.4em;color:#6b6b6b;font-family:Bitter,serif;font-style:italic;padding-bottom:20%}@media screen and (min-width:900px){.preFooter .finalDesignParagraph{font-size:1.8em;width:80%}}.design.tile__button-design{position:static}.hamburger{position:absolute;top:5px;left:5px;width:60px;height:50px;padding:5px;z-index:3;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}@media screen and (min-width:600px){.hamburger{display:none}}.hamburgerOut{position:absolute;top:-20px;left:-5px;width:60px;height:50px;padding:5px;z-index:3;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.hamburger__line{width:40px;height:3px;margin-bottom:8px}.hamburger__line-blue{background:#47b8e0}.due .hamburger__line-blue{background:#9e9fdf}.pro .hamburger__line-blue{background:#aeafdd}.tri .hamburger__line-blue{background:#feb9c4}.hamburger__line-yellow{background:#ffc952}.due .hamburger__line-yellow{background:#d9d75a}.pro .hamburger__line-yellow{background:#cfce5c}.tri .hamburger__line-yellow{background:#feb9c4}.hamburger__line-coral{background:#ff7473}.due .hamburger__line-coral{background:#a6a571}.pro .hamburger__line-coral{background:#898975}.tri .hamburger__line-coral{background:#fd728b}.mobilenav{padding-top:50px;z-index:3;position:absolute;top:0;left:-40%;width:40%;height:100%;font-family:Bitter,serif;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;background:#fff}.mobilenav p{margin:0;text-align:center}.mobilenav a{color:#fff;text-decoration:none;margin:15% 5%}.mobilenav a h2:hover{text-decoration:underline}@media screen and (min-width:600px){.mobilenav{display:none}}.hero,.heroImage{width:100%;height:40%}@media screen and (min-width:600px){.hero,.heroImage{height:60%}}@media screen and (min-width:900px){.hero,.heroImage{height:100%}}.hero__img{position:absolute;background-repeat:no-repeat;background-size:cover;background-position:50%;width:100%;height:40%;-webkit-filter:blur(2px);filter:blur(2px)}@media screen and (min-width:600px){.hero__img{height:60%}}@media screen and (min-width:900px){.hero__img{height:100%}}.hero__img-resources{background-image:url(../../assets/img/ResourcesPage/ResourceHeaderNormal.png)}.due .hero__img-resources{background-image:url(../../assets/img/ResourcesPage/ResourceHeaderDEU.png)}.pro .hero__img-resources{background-image:url(../../assets/img/ResourcesPage/ResourceHeaderPRO.png)}.tri .hero__img-resources{background-image:url(../../assets/img/ResourcesPage/ResourceHeaderTRI.png)}.hero__img-design{background-size:auto 120%;background-position:center -55px;background-image:url(../../assets/img/HomePage/Hero2.png)}.due .hero__img-design{background-image:url(../../assets/img/HomePage/Hero2DUE.png)}.pro .hero__img-design{background-image:url(../../assets/img/HomePage/Hero2PRO.png)}.tri .hero__img-design{background-image:url(../../assets/img/HomePage/Hero2TRI.png)}@media screen and (min-width:500px){.hero__img-design{background-size:cover;background-position:50%}}.heroText{text-shadow:-3px 1px 2px rgba(0,0,0,.5);font-family:BebasNeue;position:absolute;z-index:2;text-transform:uppercase;text-align:center;top:20%;left:50%;transform:translate(-50%,-50%);line-height:0}@media screen and (min-width:600px){.heroText{top:30%}}@media screen and (min-width:900px){.heroText{top:50%}}.heroTextSubline{position:absolute;top:40%;left:-5%;color:#fff;font-family:Bitter,serif;text-transform:lowercase}@media screen and (min-width:600px){.heroTextSubline{font-size:1.7rem;top:50%}}@media screen and (min-width:900px){.heroTextSubline{font-size:2.5rem;top:55%}}@media screen and (min-width:1200px){.heroTextSubline{font-size:2.5rem;top:48%;left:-3%}}.heroTextHeadline{font-size:5em;letter-spacing:.1em;margin-right:-.1em}@media screen and (min-width:600px){.heroTextHeadline{font-size:8em}}@media screen and (min-width:900px){.heroTextHeadline{font-size:12em}}@media screen and (min-width:1200px){.heroTextHeadline{font-size:16em}}@media screen and (min-width:1400px){.heroTextHeadline{font-size:19em}}.heroTextHeadlineBlue{color:#47b8e0}.due .heroTextHeadlineBlue{color:#9e9fdf}.pro .heroTextHeadlineBlue{color:#aeafdd}.tri .heroTextHeadlineBlue{color:#feb9c4}.heroTextHeadlineCoral{color:#ff7473}.due .heroTextHeadlineCoral{color:#a6a571}.pro .heroTextHeadlineCoral{color:#898975}.tri .heroTextHeadlineCoral{color:#fd728b}.heroTextHeadlineYellow{color:#ffc952}.due .heroTextHeadlineYellow{color:#d9d75a}.pro .heroTextHeadlineYellow{color:#cfce5c}.tri .heroTextHeadlineYellow{color:#feb9c4}.slider__paragraph{font-family:Bitter,serif;color:#fff;font-size:.6em;position:absolute;top:33%;left:50%;transform:translate(-50%,-50%)}@media screen and (min-width:600px){.slider__paragraph{top:53%}}@media screen and (min-width:900px){.slider__paragraph{font-size:1em;top:89%}}.heroSlider{z-index:1;position:absolute;top:37%;left:50%;transform:translate(-50%,-50%);display:-ms-flexbox;display:flex}@media screen and (min-width:600px){.heroSlider{top:57%}}@media screen and (min-width:900px){.heroSlider{top:95%}}.slider__dot{width:15px;height:15px;border-radius:20px;margin:8px;background:#fff;transition:.3s}.index .slider__dot.slider__dot:hover{background:#ffc952}.due .index .slider__dot.slider__dot:hover{background:#d9d75a}.pro .index .slider__dot.slider__dot:hover{background:#cfce5c}.tri .index .slider__dot.slider__dot:hover{background:#feb9c4}.design .slider__dot.slider__dot:hover{background:#ff7473}.due .design .slider__dot.slider__dot:hover{background:#a6a571}.pro .design .slider__dot.slider__dot:hover{background:#898975}.tri .design .slider__dot.slider__dot:hover{background:#fd728b}.resources .slider__dot.slider__dot:hover{background:#47b8e0}.due .resources .slider__dot.slider__dot:hover{background:#9e9fdf}.pro .resources .slider__dot.slider__dot:hover{background:#aeafdd}.tri .resources .slider__dot.slider__dot:hover{background:#feb9c4}.index .slider__dot.active{background:#ffc952}.due .index .slider__dot.active{background:#d9d75a}.pro .index .slider__dot.active{background:#cfce5c}.tri .index .slider__dot.active{background:#feb9c4}.design .slider__dot.active{background:#ff7473}.due .design .slider__dot.active{background:#a6a571}.pro .design .slider__dot.active{background:#898975}.tri .design .slider__dot.active{background:#fd728b}.resources .slider__dot.active{background:#47b8e0}.due .resources .slider__dot.active{background:#9e9fdf}.pro .resources .slider__dot.active{background:#aeafdd}.tri .resources .slider__dot.active{background:#feb9c4}@media screen and (min-width:900px){.slider__dot{width:15px;height:15px}}.stickynav-replacement{z-index:4}@media screen and (min-width:600px){.stickynav-replacement.show{height:67px}}.stickynav{display:none}@media screen and (min-width:600px){.stickynav{z-index:4;width:100%;font-family:Bitter,serif;display:-ms-flexbox;display:flex;background:#47b8e0;padding-left:5%}.due .stickynav{background:#9e9fdf}.pro .stickynav{background:#aeafdd}.tri .stickynav{background:#feb9c4}.stickynav a{color:#fff;text-decoration:none;margin:0 5%}.stickynav a h2:hover{text-decoration:underline}.stickynav.fixed{position:fixed;top:0}}@font-face{font-family:BebasNeue;src:url(../../assets/fonts/BebasNeue.otf) format("truetype")}.end,.footernav{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%}.footernav{padding:15px;font-size:.6rem;font-family:Bitter,serif;-ms-flex-pack:justify;justify-content:space-between;background:#47b8e0}.due .footernav{background:#9e9fdf}.pro .footernav{background:#aeafdd}.tri .footernav{background:#feb9c4}.footernav a{color:#fff;text-decoration:none;margin:0 1% 1% 5%}.footernav h2:hover{text-decoration:underline}@media screen and (min-width:600px){.footernav{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;padding-left:0;font-size:.8rem}}.tiles{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;text-align:center;margin:5%}@media screen and (min-width:600px){.tiles{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-bottom:0}}@media screen and (min-width:900px){.tiles{margin-bottom:5%}}.tile{position:relative;box-shadow:-4px 5px 5px 0 rgba(0,0,0,.1);background:#f1f0ef;padding:5% 5% 60px;margin-bottom:5%;font-family:Bitter,serif;color:#ff7473}.due .tile{color:#a6a571}.pro .tile{color:#898975}.tri .tile{color:#fd728b}@media screen and (min-width:600px){.tile{width:47.5%;padding:5% 5% 10%}}@media screen and (min-width:1000px){.tile{width:23%;padding:2% 2% 60px;margin-bottom:0}}.tile__img{background-repeat:no-repeat;background-size:cover;background-position:top;width:100%;height:200px}.tile__headline{font-size:1.3rem}.tile__paragraph{margin-bottom:10%}.tile__button{position:absolute;left:50%;transform:translateX(-50%)}.tile__button,.tile__buttonNav{bottom:20px;box-shadow:-4px 5px 5px 0 rgba(0,0,0,.25);text-decoration:none;color:#fff;padding:2% 6%;font-size:1.3rem;border-radius:10px;border:0 solid #47b8e0;font-family:BebasNeue}.tile__button-blue{background:#47b8e0}.due .tile__button-blue{background:#9e9fdf}.pro .tile__button-blue{background:#aeafdd}.tri .tile__button-blue{background:#feb9c4}.tile__button-coral{background:#ff7473}.due .tile__button-coral{background:#a6a571}.pro .tile__button-coral{background:#898975}.tri .tile__button-coral{background:#fd728b}.tile__button-yellow{background:#ffc952}.due .tile__button-yellow{background:#d9d75a}.pro .tile__button-yellow{background:#cfce5c}.tri .tile__button-yellow{background:#feb9c4}@media screen and (min-width:600px){.tile1,.tile3{margin-right:5%}}@media screen and (min-width:900px){.tile1,.tile3{margin-right:0}}.tile1__img{background-image:url(../../assets/img/ResourcesPage/colortestNormal.png);background-size:contain;background-position:50%;margin-left:4%}.due .tile1__img{background-image:url(../../assets/img/ResourcesPage/colortestDEU.png)}.pro .tile1__img{background-image:url(../../assets/img/ResourcesPage/colortestPRO.png)}.tri .tile1__img{background-image:url(../../assets/img/ResourcesPage/colortestTRI.png)}.tile2__img{background-image:url(../../assets/img/ResourcesPage/AppsHelpfulTipsNormal.png)}.due .tile2__img{background-image:url(../../assets/img/ResourcesPage/AppsHelpfulTipsDEU.png)}.pro .tile2__img{background-image:url(../../assets/img/ResourcesPage/AppsHelpfulTipsPRO.png)}.tri .tile2__img{background-image:url(../../assets/img/ResourcesPage/AppsHelpfulTipsTRI.png)}.tile3__img{background-image:url(../../assets/img/ResourcesPage/BestPracticesNormal.png)}.due .tile3__img{background-image:url(../../assets/img/ResourcesPage/BestPracticesDEU.png)}.pro .tile3__img{background-image:url(../../assets/img/ResourcesPage/BestPracticesPRO.png)}.tri .tile3__img{background-image:url(../../assets/img/ResourcesPage/BestPracticesTRI.png)}.tile4__img{background-image:url(../../assets/img/ResourcesPage/DayInTheLifeNormal.png)}.due .tile4__img{background-image:url(../../assets/img/ResourcesPage/DayInTheLifeDEU.png)}.pro .tile4__img{background-image:url(../../assets/img/ResourcesPage/DayInTheLifePRO.png)}.tri .tile4__img{background-image:url(../../assets/img/ResourcesPage/DayInTheLifeTRI.png)}*{box-sizing:border-box}body,html{margin:0}.wrapper,body,html{width:100%;height:100%}.preload-holder{width:0;height:0;overflow:hidden}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
